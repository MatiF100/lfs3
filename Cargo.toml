[package]
edition      = "2024"
name         = "lfs3"
rust-version = "1.86"
version      = "0.1.0"

[[bin]]
name = "lfs3"
path = "./src/bin/main.rs"

[dependencies]
defmt = "1.0.1"
esp-bootloader-esp-idf = { version = "0.3.0", features = ["esp32s3"] }
esp-hal = { version = "1.0.0-rc.1", features = [
  "defmt",
  "esp32s3",
  "unstable"
] }


embassy-sync = "0.7.2"

smart-leds = "0.4.0"
esp-hal-smartled = {git = "https://github.com/badamson/esp-hal-community.git", branch = "updates-for-esp-hal-1.0.0-rc.1"} # Adapter RMT dla smart_leds

esp-storage = {version = "0.8.0", features = ["defmt", "esp32s3"]}
littlefs2 = {version = "0.6.1", features = ["c-stubs", "alloc", "log-all", "serde"]}

embassy-net = { version = "0.7.0", features = [
  "defmt",
  "dhcpv4",
  "medium-ethernet",
  "tcp",
  "udp",
] }
embedded-io = { version = "0.7.1" }
embedded-io-async = { version = "0.7.0" }
embedded-storage = "0.3.1"
esp-alloc = { version = "0.9.0", features = ["defmt", "esp32s3"] }
esp-println = { version = "0.16.0", features = ["defmt-espflash", "esp32s3"] }
# for more networking protocol support see https://crates.io/crates/edge-net
critical-section = "1.2.0"
embassy-executor = { version = "0.9.1", features = [
  "defmt",
] }
serde = { version = "1.0", features = ["derive"], default-features =  false}
embassy-time = { version = "0.5.0", features = ["defmt"] }
esp-rtos = {version = "0.1.0", features = ["defmt", "esp32s3", "embassy", "esp-radio", "esp-alloc"]}
#esp-hal-embassy = { version = "0.9.1", features = ["defmt", "esp32s3"] }
esp-radio = { version = "0.16.0", features = [
  "unstable",
  "defmt",
  "esp-alloc",
  "esp32s3",
  "smoltcp",
  "wifi",
] }
smoltcp = { version = "0.12.0", default-features = false, features = [
  "defmt",
  "medium-ethernet",
  "multicast",
  "proto-dhcpv4",
  "proto-dns",
  "proto-ipv4",
  "socket-dns",
  "socket-icmp",
  "socket-raw",
  "socket-tcp",
  "socket-udp",
] }
static_cell = "2.1.1"
esp-partition-table = "0.1.3"


[profile.dev]
# Rust debug is too slow.
# For debug builds always builds with some optimization
opt-level = "s"

[profile.dev.package.esp-storage]
opt-level = 3


[profile.release]
codegen-units    = 1     # LLVM can perform better optimizations using a single thread
debug            = 2
debug-assertions = false
incremental      = false
lto              = 'fat'
opt-level        = 's'
overflow-checks  = false
